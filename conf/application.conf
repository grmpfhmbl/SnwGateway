# ~~~~~
# This is the main configuration file for the application.
# ~~~~~

# ~~~~~
# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See activator for more details.
application.secret = "]mwAB5EPekZlEf[aQmGP]EGrKB^J4p/LQqO2AutwIEG]KHgkiDFQ]OxR7nscz:j/"

# ~~~~~
# The application languages
# ~~~~~
application.langs = "en"

# ~~~~~
# SMART SensorWeb WaspMote and Sensors config
# ~~~~~
sensorweb {
  # ~~~~~
  # Configuration for supervisor actor
  # ~~~~~
  #this sends a regular hearbeat message via MQTT from the supervisor. Just for debugging at the moment.
  supervisor.heartbeat.enabled = false

  # number of seconds to wait between actors at startup - if they start too quickly the raspberry pi will not manage the load.
  supervisor.actorschedule.timeout = 30

  # ~~~~~
  # VOCAB
  # ~~~~~
  vocab {
    network.identifier = "koppl"
    #network.identifier="gksee"
    prefix.procedure = "http://vocab.smart-project.info/sensorweb/procedure"
    prefix.offering = "http://vocab.smart-project.info/sensorweb/offering"
    prefix.feature = "http://vocab.smart-project.info/sensorweb/feature"
    prefix.phenomenon = "http://vocab.smart-project.info/sensorweb/phenomenon"
  }

  # ~~~~~
  # XBEE zigBee waspmote connection driver
  # ~~~~~
  xbee {
    ## IMPORTANT! If you get an ERROR on xbe startup about timeout and checking API mode = 2
    ## also make sure the BAUDRATE(!) is set to 38400 as thexbee library expects it to be
    ## 38400.
    #TODO SREI maybe rename this to "autostart" or something like that, because it's enabled anyways but not started.
    enabled = "false"

    #device where the xbee-zb is conencted to. Defaults to /dev/ttyUSB0 if not specified
    #certain ports must be declared also as property when starting the JVM. See start scripts and look for
    #-Dgnu.io.rxtx.SerialPorts=/dev/ttyAMA0
    #serial.port="/dev/ttyAMA0"
    serial.port = "/dev/ttyUSB0"

    #TODO SREI is this configuration ever used? The network-id is basically useless to know here because it's a pure zigbee internal?
    #TODO SREI we should rename this to zigbee.
    #gateway.networkid = "2556"
  }

  # ~~~~~
  # WIZ configuration
  # ~~~~~
  wiz {
    enabled = "false"

    serial {
      port = "/dev/ttyUSB0"
      baud = "9600"
    }
  }

  # ~~~~~
  # Steca TAROM configuration
  # ~~~~~
  tarom {
    enabled = "false"
    ## either read from "serial" or "tcp"
    readfrom = "serial"

    serial {
      port = "/dev/ttyUSB1"
      baud = "9600"
    }

    tcp {
      ip = "127.0.0.1"
      port = "4001"
    }
  }


  # ~~~~~
  # MOXA moxa serial to tcp driver
  # ~~~~~
  moxa {
    #base.ip="192.168.178.100"
    base.ip = "127.0.0.1"
    spa.port = "4001"
    spa.enabled = "false"
    tarom.port = "4002"
    tarom.enabled = "false"
  }

  uplink {
    # ~~~~~
    # SOS data upload
    # ~~~~~
    sos {
      enabled = "false"
      # if true, MqttActor is used to publish measurements. If false, measurements will be published to SOS
      # configured in URL directly.
      publishViaMqtt = "true"
      #url="http://portal.smart-project.info/52n-sos-400/sos/kvp?service=SOS&request=GetCapabilities&AcceptVersions=2.0.0"
      url = "http://landscapelab.sbg.ac.at/sos/service?service=SOS&request=GetCapabilities&AcceptVersions=2.0.0"
      timeout = "60000"
      # TODO SREI can you think of a better name for this? :-) And as soon as we change the Xbee-ZB device, this technically needs to change. Do we really need this? We should think of something better than using the PANID
      node_equivalent = "0013A20040E69990"
      securitytoken = "1am50smrt"
      # number of observations to fetch per upload
      uploadBatchSize = 100
    }
    # ~~~~~
    # MQTT configuration
    # to publish sensor data via MQTT you also have to set uplink.sos.publishViaMqtt = true
    # ~~~~~
    mqtt {
      enabled = "false"
      #host = "mqtt.smart-project.info"
      #port = 1883
      host = "zgissvr233.geo.sbg.ac.at"
      port = 8883
      username = "rooftop_gw"
      password = "rooftop_gw"
      clientid = "gateway"${sensorweb.uplink.sos.node_equivalent}
      # TODO SREI configure here, what services to subscribe to
      topic.prefix.subscribe = ["sensorweb/admin/outbox/"${sensorweb.uplink.mqtt.clientid},
        "sensorweb/spsjenkins/outbox/"${sensorweb.uplink.mqtt.clientid}]
      topic.prefix.publish = "sensorweb/"${sensorweb.vocab.network.identifier}"/"${sensorweb.uplink.mqtt.clientid}
    }
  }
}

# ~~~~~
# Database configuration
# ~~~~~
db {
  default {
    driver = org.h2.Driver
    #url = "jdbc:h2:tcp://localhost:9092/gateway2db/gateway2db;DB_CLOSE_DELAY=-1"
    #url="jdbc:h2:file:~/gateway2db/gateway2db;DB_CLOSE_DELAY=-1"
    url = "jdbc:h2:mem:play;DB_CLOSE_DELAY=-1"
    user = gateway
    password = "p9hnm3420"

    #driver=com.mysql.jdbc.Driver
    #url="jdbc:mysql://localhost:3306/SensDB"
    #user=root
    #password=libelium2007
  }
}

# ~~~~~
# Evolutions
# ~~~~~
# You can disable evolutions if needed
evolutionplugin = enabled

# ~~~~~
# Logger
# disabled here, configuration in conf/logger.xml
# ~~~~~
#logger {
#  # Root logger:
#  root = WARN
#
#  # Logger used by the framework:
#  play = INFO
#  utils = INFO
#}

# ~~~~~
# AKKA
# ~~~~~
akka {
  # AKKA logging to play logger.
  # See https://www.playframework.com/documentation/2.3.x/SettingsLogger#Akka-logging-configuration
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"

  default-dispatcher.fork-join-executor.pool-size-max = 16
}
# akka.actor.debug.receive = on

# ~~~~~
# Play WS Client
# ~~~~~
# Follow redirects (default true)
ws.followRedirects = true
# Whether to use http.proxy* JVM system properties (default true)
ws.useProxyProperties = false
# A user agent string to set on each request (default none)
ws.useragent = "gateway2-raspi-rooftop"
# The maximum time to wait when connecting to the remote host (default is 120 seconds)
ws.timeout.connection = 60000
# The maximum time the established request can stay idle waiting for more data (default is 120 seconds).
ws.timeout.idle = 60000
# Set it to true to use gzip/deflater encoding (default is false)
ws.compressionEnable = true
# ssl simple config
ws.acceptAnyCertificate = true
